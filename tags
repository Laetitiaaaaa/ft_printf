!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	Makefile	/^CC = cc -g$/;"	m
CC	libft/Makefile	/^CC = gcc -c$/;"	m
CFLAG	libft/Makefile	/^CFLAG = -Wall -Wextra -Werror$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CObjects	Makefile	/^CObjects=$(addprefix $(OBJ_Dir),$(OBJ))$/;"	m
CSources	Makefile	/^CSources=$(addprefix $(SRC_Dir),$(SRC))$/;"	m
FT_PRINTF_H	includes/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
NAME	Makefile	/^NAME = exe_printf$/;"	m
NAME	libft/Makefile	/^NAME = libft.a$/;"	m
NOTHING	includes/ft_printf.h	/^# define NOTHING /;"	d
OBJ	Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	libft/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ_Dir	Makefile	/^OBJ_Dir = .\/obj\/$/;"	m
POURCENT_C	includes/ft_printf.h	/^# define POURCENT_C /;"	d
POURCENT_D	includes/ft_printf.h	/^# define POURCENT_D /;"	d
POURCENT_F	includes/ft_printf.h	/^# define POURCENT_F /;"	d
POURCENT_X	includes/ft_printf.h	/^# define POURCENT_X /;"	d
SRC	Makefile	/^SRC = file_util.c  ft_printf.c  ft_itoa_base.c$/;"	m
SRC	libft/Makefile	/^SRC = .\/ft_atoi.c \\$/;"	m
SRC_Dir	Makefile	/^SRC_Dir = .\/srcs\/$/;"	m
add	includes/ft_printf.h	/^	int			add;$/;"	m	struct:t_my
ap	includes/ft_printf.h	/^	va_list		ap;$/;"	m	struct:t_my
buffer	includes/ft_printf.h	/^	char		*buffer;$/;"	m	struct:t_my
content	libft/libft.h	/^	void			*content;$/;"	m	struct:s_list
content_size	libft/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
first	includes/ft_printf.h	/^	int			first;$/;"	m	struct:t_my
format	includes/ft_printf.h	/^	char		*format;$/;"	m	struct:t_my
ft_add_value	srcs/file_util.c	/^char			*ft_add_value(s_my *s_f)$/;"	f
ft_atoi	libft/ft_atoi.c	/^int		ft_atoi(const char *str)$/;"	f
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_champs	srcs/ft_champs.c	/^char	*ft_champs(char *s, int n, char *c)$/;"	f
ft_char	srcs/ft_itoa_base.c	/^char	*ft_char(char c)$/;"	f
ft_diese	srcs/ft_diese.c	/^char	*ft_diese(char c, char *s)$/;"	f
ft_end_of_format	srcs/file_util.c	/^char			*ft_end_of_format(s_my *s_f)$/;"	f
ft_float	ft_float.c	/^char	*ft_float(double f)$/;"	f
ft_init_struct	srcs/file_util.c	/^void			ft_init_struct(s_my *s_f)$/;"	f
ft_isalnum	libft/ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	libft/ft_isalpha.c	/^int		ft_isalpha(int c)$/;"	f
ft_isascii	libft/ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	libft/ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_isprint	libft/ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_itoa	libft/ft_itoa.c	/^char		*ft_itoa(int n)$/;"	f
ft_itoa_base	srcs/ft_itoa_base.c	/^char	*ft_itoa_base(int n, int a)$/;"	f
ft_itoa_first	libft/ft_itoa.c	/^static void	ft_itoa_first(int *nega, int *n, int *nb, int *i)$/;"	f	file:
ft_itoa_prime	libft/ft_itoa.c	/^static char	*ft_itoa_prime(int *n, char *str)$/;"	f	file:
ft_itoa_third	libft/ft_itoa.c	/^static void	ft_itoa_third(int *nb, int *i, char *str, int *nega)$/;"	f	file:
ft_lstadd	libft/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/;"	f
ft_lstdel	libft/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	libft/ft_lstnew.c	/^t_list		*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_memalloc	libft/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	libft/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/ft_memcmp.c	/^int		ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memdel	libft/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_plus	srcs/ft_plus.c	/^char	*ft_plus(int n)$/;"	f
ft_pourcent_c	srcs/file_util.c	/^char			*ft_pourcent_c(s_my *s_f)$/;"	f
ft_pourcent_d	srcs/file_util.c	/^char			*ft_pourcent_d(s_my *s_f)$/;"	f
ft_pourcent_f	srcs/file_util.c	/^char			*ft_pourcent_f(s_my *s_f)$/;"	f
ft_pourcent_x	srcs/file_util.c	/^char			*ft_pourcent_x(s_my *s_f)$/;"	f
ft_printf	srcs/ft_printf.c	/^int		ft_printf(const char *format, ...)$/;"	f
ft_putchar	libft/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl	libft/ft_putendl.c	/^void	ft_putendl(char const *s)$/;"	f
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr	libft/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	libft/ft_putstr.c	/^void	ft_putstr(char const *s)$/;"	f
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_split_first	libft/ft_strsplit.c	/^static void	ft_split_first(char const *s, int *word, char *c)$/;"	f	file:
ft_str_trim_third	libft/ft_strsplit.c	/^static int	ft_str_trim_third(int *word, const char *s, char *c, char **str)$/;"	f	file:
ft_strcat	libft/ft_strcat.c	/^char	*ft_strcat(char *s1, const char *s2)$/;"	f
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	libft/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	libft/ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	libft/ft_strcpy.c	/^char	*ft_strcpy(char *dst, const char *src)$/;"	f
ft_strdel	libft/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strequ	libft/ft_strequ.c	/^int		ft_strequ(const char *s1, const char *s2)$/;"	f
ft_striter	libft/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjoin_free	srcs/file_util.c	/^char			*ft_strjoin_free(char *s1, char *s2)$/;"	f
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	libft/ft_strlen.c	/^size_t		ft_strlen(const char *s)$/;"	f
ft_strmap	libft/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	libft/ft_strncat.c	/^char	*ft_strncat(char *s1, const char *s2, size_t n)$/;"	f
ft_strncmp	libft/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, int n)$/;"	f
ft_strncpy	libft/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_t len)$/;"	f
ft_strnequ	libft/ft_strnequ.c	/^int		ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	libft/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/ft_strrchr.c	/^void	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	libft/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	libft/ft_strstr.c	/^char	*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	libft/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtrim	libft/ft_strtrim.c	/^char			*ft_strtrim(char const *s)$/;"	f
ft_strtrim_second	libft/ft_strsplit.c	/^static void	ft_strtrim_second(const char *s, int *j, char *c, int *letter)$/;"	f	file:
ft_strtrimsecond	libft/ft_strtrim.c	/^static void		ft_strtrimsecond(int *i, const char *s, char *swap, char *swap2)$/;"	f	file:
ft_strtrimthird	libft/ft_strtrim.c	/^static void		ft_strtrimthird(int *i, char *swap, char *swap2)$/;"	f	file:
ft_tolower	libft/ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	libft/ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
i	includes/ft_printf.h	/^	int			i;$/;"	m	struct:t_my
j	includes/ft_printf.h	/^	int			j;$/;"	m	struct:t_my
liste_fonction	includes/ft_printf.h	/^	char*		(*liste_fonction[10]) (struct t_my *s_f);$/;"	m	struct:t_my
main	srcs/ft_printf.c	/^int		main(void)$/;"	f
main	test.c	/^int		main()$/;"	f
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
nom_fonction	includes/ft_printf.h	/^	int			nom_fonction;$/;"	m	struct:t_my
s_list	libft/libft.h	/^typedef struct		s_list$/;"	s
s_my	includes/ft_printf.h	/^}				s_my;$/;"	t	typeref:struct:t_my
t_list	libft/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
t_my	includes/ft_printf.h	/^typedef struct	t_my$/;"	s
